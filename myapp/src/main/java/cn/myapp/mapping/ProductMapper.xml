<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.myapp.dao.ProductDao">
  <resultMap id="BaseResultMap" type="cn.myapp.model.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, brand, model, count, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllPrroductType" resultMap="BaseResultMap">
    select DISTINCT type from product
  </select>
  
  <select id="searchProduct" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%') or model like CONCAT(CONCAT('%',#{model}),'%')
  </select>
  
  <select id="searchProductByModel" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where model like CONCAT(CONCAT('%',#{model}),'%')
  </select>
  
  <select id="searchProductByBrand" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%')
  </select>
  
  <select id="selectThisTypeProduct" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
      <include refid="Base_Column_List" />
     from product where type = #{type,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAllPrroduct"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.myapp.model.Product">
    insert into product (id, brand, model, 
      count,type)
    values (#{id,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER},#{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.myapp.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.myapp.model.Product">
    update product
    <set>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.myapp.model.Product">
    update product
    set brand = #{brand,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateProductCount" parameterType="java.lang.String">
    update product
    set 
      count = count-1
    where brand = #{brand,jdbcType=VARCHAR} and model = #{model,jdbcType=VARCHAR}
  </update>
</mapper>