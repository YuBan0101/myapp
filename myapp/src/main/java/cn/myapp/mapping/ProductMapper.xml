<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.myapp.dao.ProductDao">
  <resultMap id="BaseResultMap" type="cn.myapp.model.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, brand, model, count, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  
 
  <select id="selectAllProductType" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select DISTINCT type from product limit #{pageOffset}, #{pageSize}
  </select>
   <select id="selectAllProductType1"  resultMap="BaseResultMap">
    select DISTINCT type from product 
  </select>
  
  <select id="selectAllProductTypeCount" parameterType="cn.myapp.model.Page" resultType="java.lang.Integer">
    select count(DISTINCT type) from product 
  </select>
  
  <!-- 库存不足产品 -->
  <select id="selectAllShortSupplyProduct" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select  
    <include refid="Base_Column_List" />
     from product where count &lt; 5 limit #{pageOffset}, #{pageSize}
  </select>
  
   <!-- 当前品种库存不足产品 -->
  <select id="selectThisTypeShortSupplyProduct" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select 
      <include refid="Base_Column_List" />
     from product where type = #{type,jdbcType=VARCHAR} and count &lt; 5 limit #{pageOffset}, #{pageSize}
  </select>
  
   <!-- 库存不足产品数量 -->
  <select id="selectAllShortSupplyProductCount" parameterType="cn.myapp.model.Page" resultType="java.lang.Integer">
    select  
    count(type)
     from product where count &lt; 5 
  </select>
  
   <!-- 当前品种库存不足产品 数量-->
  <select id="selectThisTypeShortSupplyProductCount" parameterType="cn.myapp.model.Page" resultType="java.lang.Integer">
    select 
      count(type)
     from product where type = #{type,jdbcType=VARCHAR} and count &lt; 5 
  </select>
  
  
  
  
  <!-- 获取分页产品  limit-->
  <select id="searchProduct" parameterType="cn.myapp.model.Page"  resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%') and model like CONCAT(CONCAT('%',#{model}),'%') limit #{pageOffset}, #{pageSize}
  </select>
  
   <select id="searchProductDes" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where brand = #{brand} and model = #{model}
  </select>
  
  <!-- 获取分页产品 limit By model -->
  <select id="searchProductByModel" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where model like CONCAT(CONCAT('%',#{model}),'%') limit #{pageOffset}, #{pageSize}
  </select>
  
  <!-- 获取分页产品  limit By brand-->
  <select id="searchProductByBrand" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%') limit #{pageOffset}, #{pageSize}
  </select>
  
   <!-- 获取分页产品  数量  limit-->
  <select id="searchProductCount" parameterType="cn.myapp.model.Page"  resultType="java.lang.Integer">
    select   
    count(*)
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%') and model like CONCAT(CONCAT('%',#{model}),'%') 
  </select>
  
  <!-- 获取分页产品 数量  limit By model -->
  <select id="searchProductCountByModel" parameterType="cn.myapp.model.Page" resultType="java.lang.Integer">
    select   
    count(*)
    from product where model like CONCAT(CONCAT('%',#{model}),'%') 
  </select>
  
  <!-- 获取分页产品 数量  limit By brand-->
  <select id="searchProductCountByBrand" parameterType="cn.myapp.model.Page" resultType="java.lang.Integer">
    select   
    count(*)
    from product where brand like CONCAT(CONCAT('%',#{brand}),'%')
  </select>
  
  
  <!-- 获取所有type产品 limit by page -->
  <select id="selectThisTypeProduct" parameterType="cn.myapp.model.Page" resultMap="BaseResultMap">
    select 
      <include refid="Base_Column_List" />
     from product where type = #{type,jdbcType=VARCHAR} limit #{pageOffset}, #{pageSize}
  </select>
  
  <!-- 获取type产品个数 保存在page对象 -->
  <select id="selectThisTypeProductCount" parameterType="cn.myapp.model.Page"  resultType="java.lang.Integer">
    select count(*)
   
    from product where type = #{type,jdbcType=VARCHAR}
  </select>
  
   <!-- 获取所有产品 limit by page -->
  <select id="selectAllProduct" parameterType="cn.myapp.model.Page"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product limit #{pageOffset}, #{pageSize}
  </select>
  <!-- 获取全部产品个数 保存在page对象 -->
  <select id="selectAllProductCount"   resultType="java.lang.Integer">
    select count(*)
   
    from product 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.myapp.model.Product">
    insert into product (id, brand, model, 
      count,type)
    values (#{id,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER},#{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.myapp.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- insert by store -->
  <insert id="insertByStore" parameterType="cn.myapp.model.Store">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="cn.myapp.model.Product">
    update product
    <set>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.myapp.model.Product">
    update product
    set brand = #{brand,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateReduceProductCount" >
    update product
    set 
      count = count-#{count,jdbcType=INTEGER}
    where brand = #{brand,jdbcType=VARCHAR} and model = #{model,jdbcType=VARCHAR}
  </update>
  
  <update id="updateAddProductCount" >
    update product
    set 
      count = count+#{count,jdbcType=INTEGER}
    where brand = #{brand,jdbcType=VARCHAR} and model = #{model,jdbcType=VARCHAR}
  </update>
</mapper>